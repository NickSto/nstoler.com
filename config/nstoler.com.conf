
upstream django {
  server unix:///var/www/nstoler.com/mysite.sock;
  # server 127.0.0.1:8001;
}

# Disallow undefined or incorrect HOST names.
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;
  server_name "";
  return 444;

  ssl_certificate /etc/letsencrypt/live/nstoler.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/nstoler.com/privkey.pem;
  include /var/www/nstoler.com/config/ssl.conf;
}

# Polo captive portal detector.
server {
  listen 80;
  listen [::]:80;
  server_name polo.nstoler.com;
  #add_header "X-location" "polo/http";
  location = /uptest/polo {
    set $handler django;
    uwsgi_pass django;
    include /var/www/nstoler.com/config/uwsgi_params;
  }
  location / {
    return 301 https://nstoler.com$request_uri;
  }
}

# HTTP -> HTTPS for test.nstoler.com.
server {
  listen 80;
  listen [::]:80;
  server_name test.nstoler.com;
  #add_header "X-location" "test/http";
  return 301 https://test.nstoler.com$request_uri;
}

# Redirect all requests to https://nstoler.com:
# HTTP
server {
  listen 80;
  listen [::]:80;
  server_name tgt.cc *.nsto.co nsto.co *.nstoler.com nstoler.com;
  #add_header "X-location" "all/http";
  return 301 https://nstoler.com$request_uri;
}
# HTTPS
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name tgt.cc *.nsto.co nsto.co *.nstoler.com;
  #add_header "X-location" "all/https";
  return 301 https://nstoler.com$request_uri;

  ssl_certificate /etc/letsencrypt/live/nstoler.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/nstoler.com/privkey.pem;
  include /var/www/nstoler.com/config/ssl.conf;
}

# The canonical server: https://nstoler.com
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name test.nstoler.com nstoler.com;
  root /var/www/nstoler.com/static;
  index index.html index.htm;
  charset utf-8;
  set $handler default;

  userid         on;
  userid_name    visitors_v2;
  # Domain is automatically set to the current hostname when not specified.
  #userid_domain  .nstoler.com;
  userid_path    /;
  userid_expires 10y;

  ssl_certificate /etc/letsencrypt/live/nstoler.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/nstoler.com/privkey.pem;
  include /var/www/nstoler.com/config/ssl.conf;

  # Allow Let's Encrypt to reach its well-known path.
  location /.well-known/ {
    #add_header "X-location" "nstoler/letsencrypt";
    set $handler nginx;
    alias /var/www/nstoler.com/static/.well-known/;
  }

  #add_header "X-location" "nstoler/toplevel";

  # Remove trailing slashes on all urls (issue 301).
  rewrite ^/(.*)/$        /$1        permanent;

  # Static files.
  location /static/ {
    #add_header "X-location" "nstoler/static";
    set $handler nginx;
    ssi on;
    alias /var/www/nstoler.com/static/;
  }
  # Images.
  location /img/ {
    #add_header "X-location" "nstoler/img";
    set $handler nginx;
    alias /var/www/nstoler.com/static/img/;
  }
  # Media.
  location /media/ {
    #add_header "X-location" "nstoler/media";
    set $handler nginx;
    alias /var/www/nstoler.com/static/media/;
  }

  # Default: Django.
  location / {
    #add_header "X-location" "nstoler/django";
    set $handler django;
    # 301 redirect obsolete urls.
    location = /assemblo/            { return 301 /assemblo; }
    location = /traffic/             { return 301 /traffic; }
    location = /misc/logbrowser.html { return 301 /traffic; }
    location = /misc/yourgenome.html { return 301 /yourgenome; }
    location = /misc/userinfo.cgi    { return 301 /misc/userinfo; }
    location = /misc/cgienv.cgi      { return 301 /misc/env; }
    location = /plot.js              { return 301 /static/editpages/js/covid.js?$query_string; }
    location = /plot.css             { return 301 /static/editpages/css/covid.css?$query_string; }
    rewrite ^/p/(.+)$       /$1        permanent;
    rewrite ^/n/(.+)$       /$1        permanent;
    # A list of clean urls to be exposed to the user.
    # Using rewrites here to make the redirect internal (user-exposed url should be on the left).
    rewrite ^/assemblo$    /static/assemblo/index.html    last;
    rewrite ^/wikihistory$ /static/wikihistory/index.html last;
    rewrite ^/misc/access.txt$ /static/misc/access.txt    last;
    rewrite ^/robots.txt$  /static/robots.txt             last;
    rewrite ^/favicon.ico$ /static/favicon.ico            last;
    location = /resume {
      add_header "Content-Disposition" 'attachment; filename="Nicholas Stoler - Resume.pdf"';
      try_files /media/resume.pdf =404;
    }
    location /worktime {
      #add_header "X-location" "nstoler/django/worktime";
      set $handler django;
      # Prevent renegotiating connections every 30 seconds for auto-update feature.
      keepalive_timeout 45s 45s;
      uwsgi_pass django;
      include /var/www/nstoler.com/config/uwsgi_params;
    }
    uwsgi_pass django;
    include /var/www/nstoler.com/config/uwsgi_params;
  }

}
