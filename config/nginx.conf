
# Redirect all nstoler.com requests to HTTPS, and correct www.nstoler.com to nstoler.com.
server {
  listen 80;
  listen [::]:80;
  server_name nstoler.com www.nstoler.com;
  return 301 https://nstoler.com$request_uri;
}

server {
  listen 80;
  listen [::]:80;
  listen 443 ssl;
  listen [::]:443 ssl;
  #TODO: remove redefinition of nstoler.com:80 (without having to make a duplicate block for
  #      nsto.co).
  server_name nstoler.com *.nstoler.com nsto.co v.nsto.co www.nsto.co;
  root /var/www/nstoler.com;
  index index.html index.htm;

  ssl_certificate /etc/ssl/certs/nstoler.com.2015-rapidssl.chn.crt;
  ssl_certificate_key /etc/ssl/private/nstoler.com.2015.pem.aes256;
  include /var/www/ssl.conf;

  #TODO: Set proper domain when host is nsto.co.
  userid         on;
  userid_name    visitors_v2;
  userid_domain  .nstoler.com;
  userid_path    /;
  userid_expires 10y;

  #add_header "X-location" "nstoler/toplevel";
  
  # Prevent access to any server configuration files.
  location ~* \.(conf|sql|~)$ {
    #add_header "X-location" "nstoler/extension-deny";
    deny all;
  }
  # Prevent access to authorization info. This should be covered already by denying access to
  # directory listings, but this will be a backup in case that gets misconfigured.
  location /protect {
    #add_header "X-location" "nstoler/protect";
    deny all;
  }

  # Default location.
  location / {
    #add_header "X-location" "nstoler/root";
    ssi on;
    # With nginx I can just have it check if the uri refers to an actual
    # file or directory, and fall back to notepad if it doesn't exist!
    try_files $uri $uri/ /np/notepad.cgi?p=$uri;
    # Permanent redirects
    # Using rewrites here to make the redirect internal (user-exposed url should be on the left).
    rewrite ^/resume$ /media/resume.pdf last;
    rewrite ^/assemblo$ /assemblo/index.html last;
    rewrite ^/countdown$ /s/dad/countdown.html last;
    # Use 301 redirects for these to make the canonical url the one on the right.
    location = /assemblo             { return 301 /assemblo/; }
    location = /misc/email.html      { return 301 /s/email/form.html; }
    location = /misc/logbrowser.html { return 301 /traffic/; }
    location = /pb/                  { return 301 /pb/pbsearch.html; }
    location = /pb/index.html        { return 301 /pb/pbsearch.html; }
    location = /pb/pbrowser.cgi      { return 301 /pb/pbsearch.html; }
    location = /pb/example.cgi       { return 301 /pb/similarities.cgi?identifier=gi|170082747|ref|YP_001732067.1|; }
    # Old notepad url backward compatibility
    rewrite ^/n/(.+)$ /np/notepad.cgi?p=$1 last;
    rewrite ^/p/(.+)$ /np/notepad.cgi?p=$1 last;
  }

  # Serve any *.cgi file (no matter where it is) using fcgiwrap.
  location ~* \.cgi$ {
    #add_header "X-location" "nstoler/cgi";
    # http://www.howtoforge.com/serving-cgi-scripts-with-nginx-on-debian-squeeze-ubuntu-11.04-p3
    gzip off;
    root /var/www/nstoler.com;
    fastcgi_pass unix:/var/run/fcgiwrap.socket;
    include /var/www/fastcgi_params;
    fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
  }

}
